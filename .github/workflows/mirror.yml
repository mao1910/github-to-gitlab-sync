name: Mirror to GitLab
on:
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  mirror:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GH_PAT }}         # GitHub PAT (repo scope)
      GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}   # GitLab PAT (api+write_repository)
      GITLAB_GROUP_ID: ${{ secrets.GITLAB_GROUP_ID }}
      GITLAB_GROUP_PATH: my-group
      GITHUB_USER: "mao1910,le-fork"

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install requests

      - name: Create GitLab projects & configure pull mirrors
        run: python mirror_repos.py

      - name: Install jq for fallback
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Push any unmatched repos (fallback)
        shell: bash
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

          IFS=',' read -ra USERS <<< "$GITHUB_USER"
          for user in "${USERS[@]}"; do
            echo "Processing $user via push-mirror fallback"
            repos=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
              "https://api.github.com/users/$user/repos?per_page=100&type=all" | \
              jq -r '.[].name')
            for repo in $repos; do
              if [[ "$repo" == .* ]]; then
                continue
              fi
              echo "Cloning and pushing $user/$repo"
              git clone --mirror \
                "https://oauth2:${GITHUB_TOKEN}@github.com/${user}/${repo}.git"
              cd "${repo}.git"
              git push --mirror \
                "https://oauth2:${GITLAB_TOKEN}@gitlab.com/${GITLAB_GROUP_PATH}/${repo}.git"
              cd ..
              rm -rf "${repo}.git"
            done
          done
