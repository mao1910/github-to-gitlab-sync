name: Mirror to GitLab
on:
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  mirror:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN:      ${{ secrets.GH_PAT }}
      GITLAB_TOKEN:      ${{ secrets.GITLAB_TOKEN }}
      GITLAB_GROUP_PATH: ${{ secrets.GITLAB_GROUP_PATH }}  # "mao191-group"
      GITHUB_USER:       "mao1910,le-fork"
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install requests

      - name: Create GitLab projects & configure pull mirrors
        run: python mirror_repos.py

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Mirror via push (fallback)
        shell: bash
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

          # Re-fetch same combined list from GitHub
          repos=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/user/repos?per_page=100&affiliation=owner" | \
            jq -r '.[] | "\(.owner.login) \(.name)"')

          owner_public="${GITHUB_USER%%,*}"
          public_repos=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/users/${owner_public}/repos?per_page=100" | \
            jq -r '.[] | "\(.owner.login) \(.name)"')

          combined=$(printf "%s\n%s" "$repos" "$public_repos" | sort -u)

          while read owner name; do
            if [[ "$name" == .* ]]; then continue; fi

            # Check project existence
            enc=$(echo "${GITLAB_GROUP_PATH}/${name}" | sed 's#/#%2F#g')
            code=$(curl -s -o /dev/null -w '%{http_code}' \
              -H "PRIVATE-TOKEN: $GITLAB_TOKEN" \
              "https://gitlab.com/api/v4/projects/${enc}")
            if [[ "$code" != "200" ]]; then
              echo "Skipping ${name}: not found"
              continue
            fi

            git clone --mirror "https://oauth2:${GITHUB_TOKEN}@github.com/${owner}/${name}.git"
            cd "${name}.git"
            git push --mirror "https://oauth2:${GITLAB_TOKEN}@gitlab.com/${GITLAB_GROUP_PATH}/${name}.git"
            cd ..
            rm -rf "${name}.git"
          done <<< "$combined"
