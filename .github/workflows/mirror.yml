name: Mirror to GitLab

on:
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  mirror:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GH_PAT }}
      GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
      GITLAB_GROUP_ID: ${{ secrets.GITLAB_GROUP_ID }}
      GITHUB_USER: "mao1910,le-fork"
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install requests

      - name: Create GitLab projects
        run: python mirror_repos.py

      - name: Push repos to GitLab
        run: |
          # Configure git
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          # Split users and mirror each repo
          IFS=',' read -ra USERS <<< "$GITHUB_USER"
          for user in "${USERS[@]}"; do
            user=$(echo "$user" | xargs)  # trim whitespace
            echo "Processing repos for user: $user"
            
            # Get repos for this user
            repos=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
              "https://api.github.com/users/$user/repos?per_page=100&type=all" | \
              jq -r '.[].name')
            
            for repo in $repos; do
              # Skip dot-prefixed repos
              if [[ "$repo" == .* ]]; then
                echo "Skipping hidden repo: $user/$repo"
                continue
              fi
              
              echo "Pushing $user/$repo to GitLab..."
              
              # Clone and push
              git clone --mirror "https://oauth2:$GITHUB_TOKEN@github.com/$user/$repo.git" || continue
              cd "$repo.git"
              
              # Push to GitLab (suppress output to avoid token leaking)
              git push --mirror "https://oauth2:$GITLAB_TOKEN@gitlab.com/groups/$GITLAB_GROUP_ID/$repo.git" 2>/dev/null || echo "Push failed for $repo"
              
              cd ..
              rm -rf "$repo.git"
            done
          done
